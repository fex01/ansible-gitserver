---
# defaults file for prepare-raspberry
# These defaults mention only the most commonly overwritten variables of dependencies.
# For additional options have a look into the individual role defaults.

# rename-user
# Change to the username of your choice
user_name: "pi"
# Password for your user
user_password_hash: "raspberry"

#rename-host
# Change to the hostname of your choice
host_name: "raspberrypi"

# localization
# Set your timezone
localization_timezone: 'Europe/Berlin'
# Default locale. See `man 7 locale`
localization_default_locale: 'en_US.UTF-8'

# apt
# upgrade system: safe | full | dist
apt_upgrade: full
# Do “apt-get upgrade –download-only” every n-days (0=disable)
apt_download_upgradeable_packages: 1
# Do “apt-get autoclean” every n-days (0=disable)
apt_auto_clean_interval: 1
# Split the upgrade into the smallest possible chunks so that
# they can be interrupted with SIGUSR1. This makes the upgrade
# a bit slower but it has the benefit that shutdown while a upgrade
# is running is possible (with a small delay)
apt_unattended_upgrades_minimal_steps: yes
# Send email to this address for problems or packages upgrades
# If empty or unset then no email is sent, make sure that you
# have a working mail setup on your system. A package that provides
# 'mailx' must be installed. E.g. "user@example.com"
apt_mails: []
# Automatically reboot *WITHOUT CONFIRMATION*
# if the file /var/run/reboot-required is found after the upgrade
apt_unattended_upgrades_automatic_reboot: yes
# If automatic reboot is enabled and needed, reboot at the specific
# time instead of immediately
# Values: now | 02:00 | ...
apt_unattended_upgrades_automatic_reboot_time: now

# vim
# set manala.vim config to development
manala_vim_config_template: config/default.dev.j2
# set additional config options for vim
manala_vim_config:
  - incsearch:  true  # Search as soon as characters are entered
  - hlsearch:   true  # Highlight search results

# SSH
# grant SSH access only for
ssh_users: 
  - "{{ user_name }}"
# Sets the ssh port
ssh_port: 22
# Required field, list of ssh public keys to update ~/.authorized_keys. 
# Note: If you don't provision your user with keys, your user will no longer be able to access the host via SSH.
# !!!The first key has to be the key ansible is using!!!
ssh_public_keys: []
# String to present when connecting to host over ssh
ssh_banner: "Welcome to {{ user_name }}'s {{ host_name }} server\n"
# Basic sshd config will be done, use this to set additional values.
# Syntax:
#   - var_name: "<settings name>"
#     value: "<settings value>"
# For details about setting names and values check /etc/ssh/sshd_config.
ssh_sshd_config_settings:
  - var_name: "MaxAuthTries"
    value: "3"
  - var_name: "PubkeyAuthentication"
    value: "yes"
  - var_name: "AuthorizedKeysFile"
    value: ".ssh/authorized_keys"
  - var_name: "IgnoreUserKnownHosts"
    value: "yes"
  - var_name: "IgnoreRhosts"
    value: "yes"
  - var_name: "AllowAgentForwarding"
    value: "no"
  - var_name: "AllowTcpForwarding"
    value: "no"
  - var_name: "GatewayPorts"
    value: "no"
  - var_name: "PermitTTY"
    value: "yes"
  - var_name: "Protocol"
    value: "2"

# ufw
ufw_rules:
  - { rule: "allow", port: "{{ ssh_port }}", proto: "tcp", comment: 'SSH' }